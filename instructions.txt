# MS COCO 128

upload/coco_128/coco128_010 -> upload/datasets/coco128_010

# YOLOv3
https://github.com/ultralytics/yolov3

python train.py --weights models/yolov3.pt > >(tee logfile) 2>&1

Изменил:
models/yolo.py - _forward_once для сохранения слоев
utils/plots.py - save_intermediate, использую einops для tiling
train.py - train, там где forward, сохраняю промежуточные слои

Данные:
feat_16k_v1 - пробная генерация, с аугментацией, без сохранения min/max в признаках
feat_16k_v2 - добавил *_*_range.txt для feature scaling перед сохранением

Модели:
model_v1 - без ffmpeg, обучение <40 эпох

FFMPEG:

ffmpeg -loglevel quiet -y -i sample_train/0_0_features.png -c:v libx264 -qp 37 output.mkv && ls -l output.mkv
ffmpeg -i output.mkv -r 1/1 h264_%03d.bmp


python val.py --weights models/yolo-save.pt --data {dataset_template}{name}.yaml --task val --exist-ok --name {name} --project {project} --save-csv --save-txt --save-conf"

# Calypso

\\calypso\work\22k_koz\recognition-aware

coco_5k — COCO val 2017

[
  'video_name':
  'dataset_name':
  'metric_name':
]

heh